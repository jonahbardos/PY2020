#pragma once
#include <opencv2/core.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/highgui.hpp>
#include "Pather2.h"
#include "../math/PointXY.h"

#define w 400

using namespace cv;

class Visualizer
{

    // Goal: display local obstacles around robot (ObstacleMap) and generated route
    


    // draw map, plot obstacles from ObstacleMap
    // plot robot location (center?), destination location (trajectory if off screen)
    // plot route generated by pather     
    public:
    //take in Obstaclemap 2-d array, draw obstacles
    void drawMap(bool obstacle_map[][21]);
    //take in algorithm, draw path
    void drawPath(std::queue<PointXY> path); // take in full path from main method, change pather2 to return full path to main method
    //private helped method to bind coordinates to location on window
    void interpretCoordinates();
    //draw robot on center of screen
    void drawRobot();
    // mark edge location closest to destination or draw destination location if in bounds
    void drawDestination();

    Mat img = Mat::zeros( w, w, CV_8UC3 );

    constexpr static int GRID_SIZE = 21;

};
